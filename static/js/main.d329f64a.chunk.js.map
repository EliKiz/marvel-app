{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","services/MarvelService.js","hooks/http.hook.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","useMarvelService","useState","loading","setloading","error","setError","request","useCallback","url","a","method","body","headers","fetch","respons","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacters","id","console","log","char","name","description","undefined","thumbnail","path","extension","homepage","urls","wiki","comics","items","ErrorMessage","objectFit","src","errorImg","alt","View","clazz","includes","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","length","substring","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","chars","setChars","newItemsLoading","setNewItemsLoading","charsEnded","setCharsEnded","pageEnded","setPageEnded","setOffset","onRequest","window","addEventListener","checkPageEnded","removeEventListener","scrollY","document","documentElement","clientHeight","offsetHeight","initital","onCharsLoaded","finally","newChars","newItemLoading","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","i","stylezz","objectPosition","ref","el","onCharSelected","tabIndex","onKeyDown","e","key","renderItems","disabled","arr","sum","price","quantity","weight","onFor","Skeleton","noneComics","textAlign","slice","CharInfo","charId","skeleton","ErrorBoundary","state","info","this","setState","children","Component","App","selectedChar","decoration","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d329f64a.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","\r\nimport {useHttp} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => { \r\n    // диструктуризая хука \r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const  _apiKey = 'apikey=147066db64efab2736bdab0f6458cf0e';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n    \r\n    const getCharacters = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        console.log(res)\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => { \r\n        \r\n        return { \r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description === undefined || char.description === '' ? 'No description' : char.description,\r\n            thumbnail : char.thumbnail.path + '.' +  char.thumbnail.extension,\r\n            homepage : char.urls[0].url,\r\n            wiki : char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n\r\n    }\r\n\r\n    return {loading, error, getAllCharacters, getCharacters, clearError}\r\n\r\n}\r\n\r\nexport default useMarvelService;\r\n\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => { \r\n\r\n    const [loading, setloading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) =>  {\r\n\r\n        setloading(true);\r\n\r\n        try {\r\n            // отправка запрсоа на сервер\r\n            const respons = await fetch(url, {method, body, headers});\r\n\r\n            if(!respons.ok) { \r\n                throw new Error (`Could not fetch ${url}, status: ${respons.status}`)\r\n            }\r\n            \r\n            const data = await respons.json();\r\n\r\n            setloading(false);\r\n            return data\r\n            // e - аргумент ошибки\r\n        } catch(e) { \r\n            setloading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    // функция чистки ошибки\r\n    const clearError = useCallback(() =>  setError(null))\r\n\r\n    return { \r\n        loading,\r\n        request,\r\n        error,\r\n        clearError\r\n    }\r\n\r\n}","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorImg from './error.gif'\r\n\r\nconst ErrorMessage = () => { \r\n    return ( \r\n        // <img src={process.env.PUBLIC_URL + '/error.gif'}/>\r\n        <img style={{display : 'block', width : '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={errorImg} alt='error img'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import  {useEffect, useState} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () =>  {\n\n    const [char, setChar] = useState({})\n    // Вытаскиваем переменные из кастомного хука\n    const {loading, error, getCharacters, clearError} =  useMarvelService();\n\n    useEffect(() =>  {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000)\n    \n        return () =>  clearInterval(timerId)\n    }, [])\n\n    const onCharLoaded = (char) => { \n        if(char.description !== undefined && char.description.length > 200) { \n            char.description = char.description.substring(0, 200) + '...'\n        }\n        setChar(char)\n    }\n\n    const updateChar = () => {\n        clearError()\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n        // console.log(id)\n        // const id = 1011127;\n        // const id = 1011025; \n        // const id = 1011332; \n   \n        getCharacters(id)\n            .then(onCharLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = (loading || error) ? null  : <View char = {char}/> ;\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button  \n                onClick={updateChar}\n                className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    ) \n}\n// Easy render component\nconst View = ({char}) =>  {\n    const {thumbnail, name, description, homepage, wiki } = char\n    const clazz =  thumbnail === undefined || thumbnail.includes('not')  ? 'randomchar__not' : 'randomchar__img'  \n    return ( \n        <div className=\"randomchar__block\">\n            <img src={thumbnail}\n            alt=\"Random character\" \n            className={clazz}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description }\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;\n\n\nfunction count (string) { \n    const count ={} \n    \n    string.split('').forEach(el => {\n        count[el] = count[el] ? (count[el] + 1) : 1 \n    });\n    \n    return count\n}\n\n// console.log(count('ada'))\n\n\nfunction findOdd(A) {\n    \n    for(let i = 0; i < A.length; i++) { \n        const count = A.filter(value => value === A[i]).length;\n        if(count % 2 ) { \n            return A[i]\n        }\n    }\n    return -1 \n  }\n\n//   console.log(findOdd([20,1,-1,2,-2,3,3,5,5,1,2,4,20,4,-1,-2,5])) // => 5 \n\n\n  function countPositivesSumNegatives(input) {\n\n    let arr = 0\n    let arr2 = []\n    if ( input === null || input.length === 0 ) return []\n    \n    console.log('done')\n    input.forEach(item => { \n        if (item > 0 && item !== 0 )  arr++\n        if (item < 0 )  arr2.push(item) \n    })\n    arr2 = arr2.reduce((a, b) => {\n        return a + b\n    }, 0)\n\n    return [arr, arr2]\n  \n}\n\n//   console.log(countPositivesSumNegatives(null))","import  {useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './charList.scss';\n\n\nconst CharList = (props) => {\n    \n    const [chars, setChars] = useState([]);\n    // const [newItemLoading, setNewItemLoading] = useState(false);\n\n    const [newItemsLoading, setNewItemsLoading] = useState(true);\n    const [charsEnded, setCharsEnded] = useState(false);\n    const [pageEnded, setPageEnded] = useState(false);\n\n    const [offset, setOffset] = useState(1540);\n\n    \n\n    // экземпляр объекта\n    const {loading, error, getAllCharacters} = useMarvelService();\n    // useEffect запускается после рендера\n    //Пустой объект зависимсоти = заупск 1 раз после того, как React обновил DOM\n    useEffect(() => { \n        if(newItemsLoading) { \n            onRequest(offset, true)\n        }\n    }, [newItemsLoading])\n\n    useEffect(()=> { \n        // обработчики для загрузки персонажей скроллом\n        window.addEventListener('scroll', checkPageEnded)\n      \n        return () => { \n            window.removeEventListener('scroll', checkPageEnded)\n          \n            }\n    }, [])\n   \n\n    const checkPageEnded = () =>  {\n        if(window.scrollY + document.documentElement.clientHeight >= \n            document.documentElement.offsetHeight - 5) { \n                setNewItemsLoading(true)\n                setPageEnded(true)\n                console.log(pageEnded)\n        }\n    }\n    const onRequest = (offset, initital) => { \n        initital ? setNewItemsLoading(true) : setNewItemsLoading(false)\n        getAllCharacters(offset)\n            .then(onCharsLoaded)\n            .finally(() => setNewItemsLoading(false))\n    }\n    // Метод принимает в себя новых персонажей и изменяет стейт добалением новых персонажей к старым\n    const onCharsLoaded = (newChars) => { \n       \n        // () => ({}) взврат объекта из функции\n        setChars(chars => [...chars, ...newChars]);\n        setNewItemsLoading(newItemLoading => false)\n        setOffset(offset => offset + 9 )\n        setCharsEnded(charsEnded => newChars.length < 9)\n        setPageEnded(pageEnded => false)\n\n    }\n\n    const itemRefs = useRef([]);\n\n  \n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item =>  item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(chars)  {\n        const items = chars.map((item, i) =>  {\n            const {id, thumbnail, name} = item\n            const stylezz = thumbnail.includes('not') ? {objectFit: 'contain', objectPosition: '1px 1px'} : {objectFit: 'cover'};\n            return ( \n                <li className=\"char__item\"\n                    key={id}\n                    ref={el => itemRefs.current[i] = el}\n                    onClick={() => {props.onCharSelected(id); focusOnItem(i)}}\n                    tabIndex = '0'\n                    onKeyDown ={(e) => {\n                        console.log(e.key)\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                    <img style = {stylezz} src={thumbnail} alt=\"Hero img\"/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        });\n\n        return ( \n            <ul className='char__grid'>\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(chars)\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && newItemsLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={!newItemsLoading}\n                style = {{'display': charsEnded ? 'none' : 'block'}}\n                onClick={() => {onRequest(offset)}}\n                className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n    \n    \n}\n\n\n// const CharItem = (chars) =>  {\n\n//     console.log('chars is', chars)\n\n//     const {thumbnail, name} = chars\n\n//         return ( \n//             <li className=\"char__item\">\n//                 <img style = {thumbnail.includes('not') ? {objectFit: 'contain', objectPosition: '1px 1px'} : {objectFit: 'cover'} } src={thumbnail} alt=\"abyss\"/>\n//                 <div className=\"char__name\">{name}</div>\n//             </li>\n//         )\n\n// }\n\nCharList.propTypes = { \n    onCharSelected : PropTypes.func.isRequired\n}\n\nexport default CharList;\n\n\n\nconst food = [\n    {name: 'pasta', weight: 350, price: 78, quantity: 10},\n    {name: 'Spagetti', weight: 380, price: 128, quantity: 8},\n    {name: 'Pizza with chicken', weight: 450, price: 448, quantity: 7},\n    {name: 'Spagetti with cabage', weight: 650, price: 558, quantity: 5},\n    {name: 'Spagetti with solt', weight: 110, price: 228, quantity: 3},\n    {name: 'cezar', weight: 250, price: 338, quantity: 30},\n]\n\nconst onFood = (arr) => { \n\n    return arr\n        .filter((item) => item.price > 80 && item.quantity < 7)\n        .reduce((acc, item) => acc += item.quantity * item.weight, 0 )\n\n}     \n\nconst onFor = (arr) =>  {\n    let sum = 0;\n    for(let item of arr) {\n        if(item.price > 80 && item.quantity < 7) { \n            console.log('done')\n            sum += item.quantity * item.weight\n        }\n    }\n    return sum\n}\n\nconsole.log(onFor(food))","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeletion from '../skeleton/Skeleton'\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) =>  {\n\n    const [char, setChar] = useState(null)\n\n   const {error, loading, getCharacters, clearError} = useMarvelService();\n\n    const prevProps = useRef()\n    \n    prevProps.current = props.charId\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n    \n\n    // место для сетевых запросов\n    // componentDidMount() { \n    //    this.updateChar()\n    // }\n    // // срабатывает когда в компоненет приходит новый prop или изменяется state\n    // componentDidUpdate(prevProps, prevState){ \n    //     // Сравнение новых пропсов пришедших с верху с текущими, которые установленны в данный момент  \n    //     if(this.props.charId !== prevProps.charId) { \n    //         this.updateChar();\n    //     }\n    // }\n    // componentWillUnmount() {}\n\n   \n\n   // метод изменения данного компонента с персонажем\n    const updateChar = () => { \n        const {charId} = props;\n        if(!charId) return\n        clearError()\n        getCharacters(charId)\n            .then(onCharsLoaded)\n    }\n    const onCharsLoaded = (char) => { \n        setChar(char)\n    }\n \n    const skeleton = char || loading || error ? null : <Skeletion/> \n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = (loading || error || !char) ? null  : <View char = {char}/>;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n   \n}\n\nconst View = ({char}) => {\n     \n    const {name, description, thumbnail, homepage, wiki, comics} = char\n    const stylezz = thumbnail.includes('not') ? {objectFit: 'contain', objectPosition: '1px 1px'} : {objectFit: 'cover'};\n    const noneComics = comics.length === 0 ? <div style={{textAlign: 'center'}}>No comics <ErrorMessage/></div> : null\n    \n    return(\n        <>\n            <div className=\"char__basics\">\n                    <img style={stylezz} src={thumbnail} alt={name}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {noneComics}\n                {\n                    comics.slice(0, 10).map((item, i) => { \n                        return ( \n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        \n        </>\n    )\n\n}\nCharInfo.propTypes= { \n    charid: PropTypes.bool\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component { \r\n    state = { \r\n        error : false,\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        console.log(error, info)\r\n        this.setState({error: true})\r\n    }\r\n\r\n    render() { \r\n        if(this.state.error) { \r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst App = () => { \n\n    const [selectedChar, setChar] = useState(null)\n\n    const onCharSelected = (id) => { \n        setChar(id)\n    }\n\n    return (\n        <div className=\"app\">\n            <AppHeader/>\n            <main>\n            <ErrorBoundary>\n                <RandomChar/>\n            </ErrorBoundary>\n                <div className=\"char__content\">\n                    <ErrorBoundary>\n                    Из этого приходит и устанавливается\n                    <CharList onCharSelected = {onCharSelected}/>\n                    </ErrorBoundary>\n                    <ErrorBoundary>\n                        В этот уходит\n                        <CharInfo charId = {selectedChar}/>\n                    </ErrorBoundary> \n                </div>\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n            </main>\n        </div>\n    )\n    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}