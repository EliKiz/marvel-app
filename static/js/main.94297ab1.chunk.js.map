{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","services/MarvelService.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","MarvelService","_apiBase","_apiKey","_baseOffset","getResourse","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacters","id","char","name","description","undefined","thumbnail","path","extension","homepage","urls","wiki","comics","items","ErrorMessage","objectFit","src","errorImg","alt","RandomChar","props","state","loading","error","marvelService","onCharLoaded","console","log","length","substring","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","clazz","includes","CharList","chars","newItemLoading","charsEnded","pageEnded","onRequest","onCharsLoaded","newChars","itemRefs","setRef","ref","push","focusOnitem","forEach","item","classList","remove","add","focus","window","addEventListener","checkPageEnded","onUpdateCharListByScroll","removeEventListener","i","stylezz","objectPosition","onCharSelected","onKeyPress","e","key","focusOnItem","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","prevState","skeleton","noneComics","textAlign","slice","ErrorBoundary","err","info","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94297ab1.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","\r\n\r\nclass MarvelService { \r\n\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=147066db64efab2736bdab0f6458cf0e';\r\n    _baseOffset = 210;\r\n\r\n    getResourse = async (url) => { \r\n        let res = await fetch(url);\r\n\r\n        if(!res.ok) { \r\n            throw new Error (`Could not fetch ${url}, status: ${res.status}`)\r\n        }\r\n\r\n        return await res.json()\r\n\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResourse(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n    \r\n    getCharacters = async (id) => {\r\n        const res = await this.getResourse(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => { \r\n        \r\n        return { \r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description === undefined || char.description === '' ? 'No description' : char.description,\r\n            thumbnail : char.thumbnail.path + '.' +  char.thumbnail.extension,\r\n            homepage : char.urls[0].url,\r\n            wiki : char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default MarvelService;\r\n\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorImg from './error.gif'\r\n\r\nconst ErrorMessage = () => { \r\n    return ( \r\n        // <img src={process.env.PUBLIC_URL + '/error.gif'}/>\r\n        <img style={{display : 'block', width : '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={errorImg} alt='error img'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import  {Component} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component  {\n    constructor(props) { \n        super(props);\n        \n        console.log('Constructor')\n    }\n    state = { \n        char: {},\n        loading : true,\n        error : false,\n    }\n\n   marvelService = new MarvelService();\n\n    componentDidMount() { \n        console.log( 'Mount')\n        this.updateChar();\n    }\n    componentDidUpdate() { \n       \n    }\n    componentWillUnmount() { \n        console.log('unmount' )\n    }\n\n    onCharLoaded = (char) => { \n        console.log('update')\n        if(char.description !== undefined && char.description.length > 200) { \n            char.description = char.description.substring(0, 200) + '...'\n        }\n        \n        this.setState({\n            char : char, \n            loading : false\n        })\n    }\n\n    onCharLoading = () => { \n        this.setState({ \n            error : false,\n            loading: true\n        })\n    }\n\n    onError = () => { \n        this.setState({\n            loading : false,\n            error : true\n        })\n    }\n\n   updateChar = () => {\n        const id = Math.floor(Math.random() * (1010789 - 1009146) + 1009146)\n        // console.log(id)\n        // const id = 1011127;\n        // const id = 1011025; \n        // const id = 1011332; \n        this.onCharLoading();\n        this.marvelService\n            .getCharacters(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() { \n        console.log('Render' )\n        const {char, loading, error} = this.state;\n        console.log('char is', char )\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = (loading || error) ? null  : <View char = {char}/> ;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button  \n                    onClick={this.updateChar}\n                    className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n\n    }\n\n    \n}\n// Easy render component\nconst View = ({char}) =>  {\n    const {thumbnail, name, description, homepage, wiki } = char\n    const clazz = thumbnail.includes('not') ? 'randomchar__not' : 'randomchar__img'  \n    return ( \n        <div className=\"randomchar__block\">\n            <img src={thumbnail} \n            \n            alt=\"Random character\" \n            className={clazz}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description }\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;\n\n\nfunction count (string) { \n    const count ={} \n    \n    string.split('').forEach(el => {\n        count[el] = count[el] ? (count[el] + 1) : 1 \n    });\n    \n    return count\n}\n\n// console.log(count('ada'))\n\n\nfunction findOdd(A) {\n    \n    for(let i = 0; i < A.length; i++) { \n        const count = A.filter(value => value === A[i]).length;\n        if(count % 2 ) { \n            return A[i]\n        }\n    }\n    return -1 \n  }\n\n//   console.log(findOdd([20,1,-1,2,-2,3,3,5,5,1,2,4,20,4,-1,-2,5])) // => 5 \n\n\n  function countPositivesSumNegatives(input) {\n\n    let arr = 0\n    let arr2 = []\n    if ( input === null || input.length === 0 ) return []\n    \n    console.log('done')\n    input.forEach(item => { \n        if (item > 0 && item !== 0 )  arr++\n        if (item < 0 )  arr2.push(item) \n    })\n    arr2 = arr2.reduce((a, b) => {\n        return a + b\n    }, 0)\n\n    return [arr, arr2]\n  \n}\n\n//   console.log(countPositivesSumNegatives(null))","import  {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\n\nimport './charList.scss';\n\n\nclass CharList extends Component {\n    \n    state = { \n        chars : [],\n        loading : true,\n        error : false,\n        newItemLoading : false,\n\n        charsEnded: false,\n        pageEnded: false,\n\n        offset : 1540,\n        \n    }\n\n    // экземпляр объекта\n    marvelService = new MarvelService();\n\n    // первичная загрузка персонажей \n    componentDidMount() { \n        this.updateChar()\n\n        window.addEventListener('scroll', this.checkPageEnded)\n        window.addEventListener('scroll', this.onUpdateCharListByScroll)\n    }\n\n    componentWillUnmount() { \n        window.removeEventListener('scroll', this.checkPageEnded)\n        window.removeEventListener('scroll', this.onUpdateCharListByScroll)\n    }\n\n    // checkPageEnded = () =>  {\n    //     if(window.scrollY + document.documentElement.clientHeight >= \n    //         document.documentElement.offsetHeight - 5) { \n    //             this.setState({pageEnded: true})\n    //     }\n    // }\n\n    // onUpdateCharListByScroll = () => { \n    //     const {pageEnded, charsEnded, newItemLoading} = this.state\n\n    //     if(pageEnded && !charsEnded && !newItemLoading) { \n    //         this.onRequest(this.state.offset)\n    //     }\n    // }\n    \n    onRequest = (offset) => { \n        this.setState({newItemLoading : true})  \n\n        this.marvelService\n            .getAllCharacters(offset)\n            .then(this.onCharsLoaded)\n            .catch(this.onError)\n    }\n    // Метод принимает в себя новых персонажей и изменяет стейт добалением новых персонажей к старым\n    onCharsLoaded = (newChars) => { \n       \n        // () => ({}) взврат объекта из функции\n        this.setState(({offset, chars }) =>  ({\n            chars: [...chars, ...newChars],\n            loading : false,\n            newItemLoading : false,\n            offset : offset + 9,\n            charsEnded : newChars.length < 9,\n            pageEnded : false,\n            \n        }))\n    }\n    onError = () => { \n        this.setState({ \n            loading : false,\n            error : true\n        })\n    }\n    updateChar = () => { \n        this.onRequest()\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => { \n        this.itemRefs.push(ref)\n    }\n    focusOnitem = (id) => {\n        this.itemRefs.forEach(item =>  item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    renderItems(chars)  {\n        const items = chars.map((item, i) =>  {\n            const {id, thumbnail, name} = item\n            const stylezz = thumbnail.includes('not') ? {objectFit: 'contain', objectPosition: '1px 1px'} : {objectFit: 'cover'};\n            return ( \n                <li className=\"char__item\"\n                    key={id}\n                    ref={this.setRef}\n                    onClick={() => {this.props.onCharSelected(id); this.focusOnitem(i)}}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            this.props.onCharSelected(id);\n                            this.focusOnItem(i);\n                        }\n                    }}>\n                    <img style = {stylezz} src={thumbnail} alt=\"Hero img\"/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        });\n\n        return ( \n            <ul className='char__grid'>\n                {items}\n            </ul>\n        )\n    }\n\n    render() { \n\n        const {chars, loading, error, offset, newItemLoading, charsEnded} = this.state\n        const items = this.renderItems(chars)\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = (loading || error) ? null  : items;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    disabled={newItemLoading}\n                    style = {{'display': charsEnded ? 'none' : 'block'}}\n                    onClick={() => {this.onRequest(offset)}}\n                    className=\"button button__main button__long\">\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n    \n}\n\n\n// const CharItem = (chars) =>  {\n\n//     console.log('chars is', chars)\n\n//     const {thumbnail, name} = chars\n\n//         return ( \n//             <li className=\"char__item\">\n//                 <img style = {thumbnail.includes('not') ? {objectFit: 'contain', objectPosition: '1px 1px'} : {objectFit: 'cover'} } src={thumbnail} alt=\"abyss\"/>\n//                 <div className=\"char__name\">{name}</div>\n//             </li>\n//         )\n\n// }\n\nCharList.propTypes = { \n    onCharSelected : PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeletion from '../skeleton/Skeleton'\nimport MarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\n\n\nclass CharInfo extends Component {\n   \n    state = { \n        char: null,\n        loading : false,\n        error : false,\n    }\n\n   marvelService = new MarvelService();\n    // место для сетевых запросов\n    componentDidMount() { \n       this.updateChar()\n    }\n    // срабатывает когда в компоненет приходит новый prop или изменяется state\n    componentDidUpdate(prevProps, prevState){ \n        // Сравнение новых пропсов пришедших с верху с текущими, которые установленны в данный момент  \n        if(this.props.charId !== prevProps.charId) { \n            this.updateChar();\n        }\n    }\n    componentWillUnmount() {}\n\n   \n\n   // метод изменения данного компонента с персонажем\n    updateChar = () => { \n        const {charId} = this.props;\n        if(!charId) return\n\n        this.onCharLoading()\n        this.marvelService\n            .getCharacters(charId)\n            .then(this.onCharsLoaded)\n            .catch(this.onError)\n\n    }\n    onCharsLoaded = (char) => { \n\n        this.setState({\n            char: char,\n            loading: false,\n        })\n\n    }\n    onError = () => { \n        this.setState({ \n            loading : false,\n            error : true\n        })\n    }\n    onCharLoading = () => { \n        this.setState({ \n            error : false,\n            loading: true\n        })\n    }\n\n    // renderComics(char)  {\n    //     console.log('name is', char)\n    //     const {name, description, thumbnail, homepage, wiki} = char\n    //     const items = char.comics.map((item, i) =>  {\n    //         return (\n    //             <li key={i} className=\"char__comics-item\">\n    //             {item.name}\n    //             </li>\n    //         )\n    //     })\n    //     return ( \n    //         <>\n    //         <div className=\"char__basics\">\n    //                     <img src={thumbnail} alt={name}/>\n    //                     <div>\n    //                         <div className=\"char__info-name\">{name}</div>\n    //                         <div className=\"char__btns\">\n    //                             <a href={homepage} className=\"button button__main\">\n    //                                 <div className=\"inner\">homepage</div>\n    //                             </a>\n    //                             <a href={wiki} className=\"button button__secondary\">\n    //                                 <div className=\"inner\">Wiki</div>\n    //                             </a>\n    //                         </div>\n    //                     </div>\n    //             </div>\n    //             <div className=\"char__descr\">\n    //                 {description}\n    //             </div>\n    //             <div className=\"char__comics\">Comics:</div>\n    //             <ul className=\"char__comics-list\">\n    //                 {items}\n    //             </ul>\n    //         </>\n    //     )\n    // }\n\n    render() { \n        const {char, loading, error} = this.state;\n        const skeleton = char || loading || error ? null : <Skeletion/> \n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = (loading || error || !char) ? null  : <View char = {char}/>;\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n\n    }\n}\n\nconst View = ({char}) => {\n     \n    const {name, description, thumbnail, homepage, wiki, comics} = char\n    const stylezz = thumbnail.includes('not') ? {objectFit: 'contain', objectPosition: '1px 1px'} : {objectFit: 'cover'};\n    const noneComics = comics.length === 0 ? <div style={{textAlign: 'center'}}>No comics <ErrorMessage/></div> : null\n    \n    return(\n        <>\n            <div className=\"char__basics\">\n                    <img style={stylezz} src={thumbnail} alt={name}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {noneComics}\n                {\n                    \n                    comics.slice(0, 10).map((item, i) => { \n                        \n                        return ( \n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n                \n               \n                \n            </ul>\n        \n        </>\n    )\n\n}\nCharInfo.propTypes= { \n    charid: PropTypes.bool\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component { \r\n    state = { \r\n        error : false,\r\n    }\r\n\r\n    componentDidCatch(err, info) {\r\n        console.log(err, info)\r\n        this.setState({error: true})\r\n    }\r\n\r\n    render() { \r\n        if(this.state.error) { \r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react/cjs/react.production.min\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component { \n    state = {\n        selectedChar: null\n    }\n    \n    onCharSelected = (id) => { \n        this.setState({ \n            selectedChar : id\n        })\n    }\n\n    render() { \n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                <ErrorBoundary>\n                    <RandomChar/>\n                </ErrorBoundary>\n                    \n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                        {/* Из этого приходит и устанавливается */}\n                        <CharList onCharSelected = {this.onCharSelected}/>\n                        </ErrorBoundary>\n                         <ErrorBoundary>\n                         {/* В этот уходит */}\n                            <CharInfo charId = {this.state.selectedChar}/>\n                         </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}